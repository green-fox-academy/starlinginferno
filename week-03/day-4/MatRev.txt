f(3)
3 * f(2)
      2 * f(1)
            1

// Given a non-negative int n, return the sum of its digits recursively (no loops).
// Note that mod (%) by 10 yields the rightmost digit (126 % 10 is 6), while
// divide (/) by 10 removes the rightmost digit (126 / 10 is 12).

126

x = 126 % 10 (6)
x = x (6) + 126/ 10 (12)
x = x

12345
12345 % 10 = 5
12345 / 10 = 1234
1234 % 10 = 4
1234 / 10 = 123
123 % 10 = 3
123 / 10 = 12
12 % 10 = 2
12 / 10 = 1
1 % 10

n / ((int)(pow(10,(int)log(n))));

4
3 + 2 + 3 + 2 = 